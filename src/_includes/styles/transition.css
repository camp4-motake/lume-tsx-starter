@media not print {
  .has-fade-b-in,
  .has-fade-b-in-img img {
    --_delay: 0.08s;
    --_duration: 0.8s;
    --_y: calc(1.75rem + 2.5%);

    /* Avoid NO_LCP */
    opacity: 0.001;

    transform: translateY(var(--_y));
    will-change: opacity, transform;
  }

  .has-decode-in-img img {
    --_delay: 0s;
    --_duration: 0.2s;

    opacity: 0.001;
    will-change: opacity;
  }

  .has-fade-b-in-img,
  .has-decode-in-img {
    position: relative;
    overflow: clip;
    contain: layout paint;
  }

  .has-page-active:root {
    .has-fade-b-in,
    .has-fade-b-in-img img {
      transition:
        transform var(--_duration) var(--ease-out-circ),
        opacity calc(var(--_duration) * 0.6) ease;
      transition-delay:
        var(--_delay),
        var(--_delay);
    }

    [data-scroll="in"].has-fade-b-in,
    [data-scroll="in"].has-fade-b-in-img img[data-img-decoded="true"] {
      opacity: 1;
      transform: translateY(0);
    }

    .has-decode-in-img img {
      transition: opacity var(--_duration) var(--_delay);
      display: block;
    }

    .has-decode-in-img img[data-img-decoded="true"] {
      opacity: 1;
    }

    :is(
      .has-fade-b-in-img,
      .has-img-bright-in,
      .has-decode-in-img:has(img)
    ) {
      &:not(:has(img[data-img-decoded="true"])):before {
        position: absolute;
        z-index: 3;
        inline-size: 100%;
        block-size: 100%;
        content: "";
        background: linear-gradient(
          90deg,
          rgb(220 220 220 / 0) 0%,
          rgb(220 220 220 / 0.4) 50%,
          rgb(220 220 220 / 0) 100%
        );
        translate: -100% 0 0;
        animation: shimmer 1s infinite 1.2s;
      }

      &.is-grad-lighten:not(:has(img[data-img-decoded="true"]))::before {
        background: linear-gradient(
          90deg,
          rgb(255 255 255 / 0) 0%,
          rgb(255 255 255 / 0.4) 50%,
          rgb(255 255 255 / 0) 100%
        );
      }
    }
  }

  [data-scroll] > .has-text-mask-in {
    scale: 1.25;
    opacity: 0.0001;
    clip-path: circle(0% at 50% 50%);
    white-space: scale, opacity, clip-path;
    backface-visibility: hidden;
  }
  [data-scroll="in"] > .has-text-mask-in {
    scale: 1;
    opacity: 1;
    clip-path: circle(100% at 50% 50%);
    transition:
      clip-path 1.75s var(--ease-out-circ) 0.2s,
      opacity 0.1s 0.2s,
      scale 1.2s var(--ease-out-circ) 0.2s;
  }
}

@keyframes shimmer {
  0% {
    translate: -100% 0 0;
  }
  100% {
    translate: 100% 0 0;
  }
}

/* -- image --- */

@media not print {
  .has-img-bright-in:where([data-scroll]) {
    --_v-dir: -1;
    --_h-dir: 0;
    --_grad-deg: 180deg;
    --_grad-color: transparent;
    --_delay-clip: 0.1s;
    --_delay-grad: 0.05s;
    --_delay-img: 0.05s;

    position: relative;
    clip-path: inset(7.5% 7.5% 15% 7.5%);
    overflow: hidden;
    contain: layout paint;

    &::after {
      --_grad-color: var(--color-base);

      position: absolute;
      z-index: 1;
      inset-block-start: calc(var(--_v-dir) * 100%);
      inset-inline-start: calc(var(--_h-dir) * 100%);
      background-image: linear-gradient(
        var(--_grad-deg),
        rgb(0 0 0 / 0) 0%,
        var(--_grad-color) 50%,
        var(--_grad-color) 100%
      );
      inline-size: 100%;
      block-size: 200%;
      content: "";
      contain: layout paint;
      backface-visibility: hidden;
      will-change: translate;
    }

    img {
      display: block;
      translate: 0 2em 0;
      scale: 1.05;
      z-index: 0;
      filter: brightness(2);
      backface-visibility: hidden;
      will-change: translate, scale, filter;
    }

    &.is-overlay-primary::after {
      --_grad-color: var(--color-primary);
    }
  }

  .has-page-active:root .has-img-bright-in[data-scroll="in"]:has([data-img-decoded="true"]) {
    clip-path: inset(0);
    transition: clip-path 1.1s var(--ease-out-circ) var(--_delay-clip);

    &::after {
      translate: calc(var(--_h-dir) * -100%) calc(var(--_v-dir) * -100%) 0;
      transition: translate 1.4s var(--ease-out-circ) var(--_delay-grad);
    }

    img {
      translate: 0 0 0;
      scale: 1;
      filter: brightness(1);
      transition:
        scale 1.1s var(--ease-out-circ) var(--_delay-img),
        translate 1.1s var(--ease-out-circ) var(--_delay-img),
        filter 1.4s var(--ease-out-circ) var(--_delay-img);
    }
  }
}
/*
@media not print {
  .has-hover-brightness {
    --_brightness: 1.035;

    transition: 0.2s filter ease;

    &:focus-visible {
      filter: brightness(var(--_brightness));
    }
    @media (any-hover: hover) {
      &:hover {
        filter: brightness(var(--_brightness));
      }
    }
  }
}
 */

@media not print {
  .has-text-line {
    display: inline;
    position: relative;

    &::before {
      position: absolute;
      inset-block: auto 0;
      inset-inline: 0;
      content: "";
      background-color: var(--color-secondary);
      inline-size: 100%;
      block-size: 0.2em;
      scale: 0 1 1;
      transform-origin: 0 100%;
      z-index: 0;
    }

    > span {
      position: relative;
      z-index: 1;
    }
  }

  .has-page-active:root [data-scroll="in"].has-text-line {
    &::before {
      transition: scale 0.6s var(--ease-in-out-circ);
      scale: 1;
    }
  }
}
